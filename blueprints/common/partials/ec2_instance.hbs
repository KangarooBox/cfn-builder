{{!--
  Creates a new EC2 instance.

  http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html
 --}}
"ec2{{sanitize this.Name ''}}":{
  "Type":"AWS::EC2::Instance",
  {{#if this.DISABLED}}"Condition":"Disabled",{{/if}}
  "Metadata":{
    {{#if this.S3AccessRole}}
    "AWS::CloudFormation::Authentication":{
      "S3AccessCreds":{"type":"S3","roleName":{"Ref":"iamr{{this.S3AccessRole}}"}}
    },
    {{/if}}
    "AWS::CloudFormation::Init":{
    {{#if this.CloudInit}}
      {{{ inject this.CloudInit }}}
    {{else}}
      {{> (whichPartial "AMI" "cfn_init_" this) }}
    {{/if}}
    }
  },
  "Properties":{
    {{#if this.Affinity}}"Affinity":"{{this.Affinity}}",{{/if}}
    {{#if this.AvailabilityZone}}"AvailabilityZone":"{{this.AvailabilityZone}}",{{/if}}
    {{#if this.BlockDeviceMappings}}
    "BlockDeviceMappings":[{{#each this.BlockDeviceMappings}}{ {{{inject this}}} }{{#unless @last}},{{/unless}}{{/each}}],
    {{/if}}
    "DisableApiTermination":{{default (toString this.DisableApiTermination) false}},
    "EbsOptimized":{{default this.EbsOptimized false}},
    {{#if this.HostId}}"HostId":"{{this.HostId}}",{{/if}}
    {{#if this.IamInstanceProfile}}"IamInstanceProfile":{"Ref":"iamip{{this.IamInstanceProfile}}"},{{/if}}

    {{#if this.AMI}}
      "ImageId":"{{findAMI this.AMI @root.Region.AMIs}}"
    {{else}}
      {{#ifObject this.ImageId}}
        "ImageId": { {{{inject this.ImageId}}} }
      {{else}}
        "ImageId": "{{this.ImageId}}"
      {{/ifObject}}
    {{/if}},

    {{#if this.InstanceInitiatedShutdownBehavior}}"InstanceInitiatedShutdownBehavior":"{{this.InstanceInitiatedShutdownBehavior}}",{{/if}}
    "InstanceType":"{{this.InstanceType}}",
    {{#if this.KernelId}}"KernelId":"{{this.KernelId}}",{{/if}}
    {{#if this.KeyName}}"KeyName":"{{this.KeyName}}",{{/if}}
    "Monitoring":{{default this.InstanceMonitoring false}},
    {{#if this.NetworkInterfaces}}
      {{#if this.NetworkInterfaces.Name}}
        "NetworkInterfaces":[{{#each this.NetworkInterfaces}}
        { "NetworkInterfaceId": {"Ref":"neti{{this.Name}}"}, "DeviceIndex":"{{this.DeviceIndex}}" }
        {{#unless @last}},{{/unless}}{{/each}}],
      {{else}}
        "NetworkInterfaces":[
          {{#each this.NetworkInterfaces}}{
            {{#if (toString this.AssociatePublicIpAddress)}}"AssociatePublicIpAddress":{{this.AssociatePublicIpAddress}},{{/if}}
            {{#if this.Description}}"Description":"{{this.Description}}",{{/if}}
            "DeviceIndex":"{{default this.DeviceIndex 0}}",
            {{#if this.GroupSet}}"GroupSet":[{{#each this.GroupSet}}{"Ref":"ec2sg{{this}}"}{{comma}}{{/each}}],{{/if}}
            {{#if this.Ipv6Addresses}}
              "Ipv6AddressCount": {{this.Ipv6Addresses.length}},
              "Ipv6Addresses": [{{#each this.Ipv6Addresses}}"{{this}}"{{#unless @last}},{{/unless}}{{/each}}],
            {{/if}}

            {{#if this.NetworkInterfaceId}}"NetworkInterfaceId": "{{this.NetworkInterfaceId}}",{{/if}}
            {{#if this.PrivateIpAddress}}"PrivateIpAddress": "{{this.PrivateIpAddress}}",{{/if}}
            {{#if this.PrivateIpAddresses}}"PrivateIpAddresses": [
              {{#each this.PrivateIpAddresses}}{ {{{inject this}}} }{{comma}}{{/each}}
            ],{{/if}}
            {{#if this.SecondaryPrivateIpAddressCount}}"SecondaryPrivateIpAddressCount": {{this.SecondaryPrivateIpAddressCount}},{{/if}}

            {{#if this.Subnet}}
              {{#each @root.Region.Subnets as |subnet name|}}
                {{#each subnet.addresses}}
                  {{#ifEq ../../Subnet name}}
                    "SubnetId":"{{this.Id}}",
                  {{/ifEq}}
                {{/each}}
              {{/each}}
            {{/if}}

            "DeleteOnTermination":{{default (toString this.DeleteOnTermination) true}}
          }{{comma}}{{/each}}],
      {{/if}}
    {{/if}}

    {{#if this.PlacementGroupName}}"PlacementGroupName":"{{this.PlacementGroupName}}",{{/if}}
    {{#if this.PrivateIpAddress}}"PrivateIpAddress":"{{this.PrivateIpAddress}}",{{/if}}
    {{#if this.RamdiskId}}"RamdiskId":"{{this.RamdiskId}}",{{/if}}
    {{#if this.SecurityGroups}}"SecurityGroupIds":[
      {{#each this.SecurityGroups}}
        {{#startsWith "sg" this}}
          "{{this}}"
        {{else}}
          {"Ref":"ec2sg{{this}}"}
        {{/startsWith}}
        {{#unless @last}},{{/unless}}
      {{/each}}],
    {{/if}}
    {{#if this.SsmAssociations}}"SsmAssociations":[{{#each this.SsmAssociations}}{"Ref":"ssmd{{this}}"}{{#unless @last}},{{/unless}}{{/each}}]{{/if}}

    "SourceDestCheck":{{default (toString this.SourceDestCheck) true}},
    {{#if this.SubnetId}}
      {{#startsWith "subnet-" this.SubnetId}}
        "SubnetId": "{{this.SubnetId}}",
      {{else}}
        {{#if this.SubnetIndex}}
          "SubnetId": {{#with (lookupByNode @root.Region.SubnetIds this.SubnetId) }}
            "{{lookup this ../SubnetIndex}}"
          {{/with}},
        {{else}}
          {{!-- Choose the first subnet --}}
          "SubnetId": {{#with (lookupByNode @root.Region.Subnets this.SubnetId) }}
            {{#each this.addresses}}
              {{#if @first}}"{{this.Id}}"{{/if}}
            {{/each}}
          {{/with}},
        {{/if}}
      {{/startsWith}}
    {{/if}}

    {{#if this.Tenancy}}"Tenancy":"{{this.Tenancy}}",{{/if}}
    {{#if this.UserData}}"UserData": { {{{inject this.UserData}}} },
    {{else}}
      {{> (whichPartial "AMI" "user_data_" this) }},
    {{/if}}
    {{#if this.Volumes}}"Volumes":[
      {{#each this.Volumes}}{"Device":"{{this.Device}}", "VolumeId":
        {{#startsWith "vol-" this.VolumeId}}
          "{{this.VolumeId}}"
        {{else}}
          {"Ref":"ec2v{{this.VolumeId}}"}
        {{/startsWith}}
      }{{#unless @last}},{{/unless}}{{/each}}
    ],{{/if}}
    {{#if this.AdditionalInfo}}"AdditionalInfo":"{{this.AdditionalInfo}}",{{/if}}
    {{> tags }}
  }
}
{{#if this.AutoRecovery}}
,"cldwalrm{{this.Name}}": {
  "Type":"AWS::CloudWatch::Alarm",
  {{#if this.DISABLED}}"Condition":"Disabled",{{/if}}
  "Properties": {
    "AlarmName": "EC2 AutoRecover: {{this.Name}} ({{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}})",
    "AlarmDescription": "Automatically recover this EC2 instance if something goes wrong.",
    "AlarmActions": [
      {{#each this.AutoRecovery.AlarmActions}}"{{this}}",{{/each}}
      "arn:aws:automate:{{@root.Region.Id}}:ec2:recover"
    ],
    "TreatMissingData": "notBreaching",
    "ComparisonOperator": "GreaterThanThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "StatusCheckFailed_System",
    "Namespace": "AWS/EC2",
    "Period": 60,
    "Statistic": "Minimum",
    "Threshold": 0,
    "Dimensions": [
      { "Name": "InstanceId", "Value": {"Ref":"ec2{{this.Name}}"} }
    ]
  }
}
{{/if}}
