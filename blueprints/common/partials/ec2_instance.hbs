{{!--
  Creates a new EC2 instance.

  http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html
 --}}
"ec2{{this.Name}}":{
  "Type":"AWS::EC2::Instance",
  "Metadata":{
    {{#if this.S3AccessRole}}
    "AWS::CloudFormation::Authentication":{
      "S3AccessCreds":{"type":"S3","roleName":{"Ref":"iamr{{this.S3AccessRole}}"}}
    },
    {{/if}}
    "AWS::CloudFormation::Init":{
    {{#if this.CloudInit}}
      {{{ inject this.CloudInit }}}
    {{else}}
      {{> (whichPartial "cfn_init_" this) }}
    {{/if}}
    }
  },
  "Properties":{
    {{#if this.Affinity}}"Affinity":"{{this.Affinity}}",{{/if}}
    {{#if this.AvailabilityZone}}"AvailabilityZone":"{{this.AvailabilityZone}}",{{/if}}
    {{#if this.BlockDeviceMappings}}
    "BlockDeviceMappings":[{{#each this.BlockDeviceMappings}}{ {{{inject this}}} }{{#unless @last}},{{/unless}}{{/each}}],
    {{/if}}
    "DisableApiTermination":{{default (toString this.DisableApiTermination) false}},
    "EbsOptimized":{{default this.EbsOptimized false}},
    {{#if this.HostId}}"HostId":"{{this.HostId}}",{{/if}}
    {{#if this.IamInstanceProfile}}"IamInstanceProfile":{"Ref":"iamip{{this.IamInstanceProfile}}"},{{/if}}
    "ImageId":"{{findAMI this.AMI @root.Region.AMIs}}",
    {{#if this.InstanceInitiatedShutdownBehavior}}"InstanceInitiatedShutdownBehavior":"{{this.InstanceInitiatedShutdownBehavior}}",{{/if}}
    "InstanceType":"{{this.InstanceType}}",
    {{#if this.KernelId}}"KernelId":"{{this.KernelId}}",{{/if}}
    {{#if this.KeyName}}"KeyName":"{{this.KeyName}}",{{/if}}
    "Monitoring":{{default this.InstanceMonitoring false}},
    {{#if this.NetworkInterfaces}}
      {{#if this.NetworkInterfaces.Name}}
        "NetworkInterfaces":[{{#each this.NetworkInterfaces}}
        { "NetworkInterfaceId": {"Ref":"neti{{this.Name}}"}, "DeviceIndex":"{{this.DeviceIndex}}" }
        {{#unless @last}},{{/unless}}{{/each}}],
      {{else}}
        "NetworkInterfaces":[
          {{#each this.NetworkInterfaces}}{
            "Description":"{{this.Description}}",
            "AssociatePublicIpAddress":{{default this.AssociatePublicIpAddress false}},
            "SubnetId": {{#with (lookupByNode @root.Region.SubnetIds this.SubnetId) }}"{{this.[0]}}"{{/with}},
            "DeleteOnTermination":{{default (toString this.DeleteOnTermination) true}},
            {{#if this.Ipv6Addresses}}
            "Ipv6AddressCount": {{this.Ipv6Addresses.length}},
            "Ipv6Addresses": [{{#each this.Ipv6Addresses}}"{{this}}"{{#unless @last}},{{/unless}}{{/each}}],
            {{/if}}
            "DeviceIndex":"{{default this.DeviceIndex 0}}",
            "GroupSet":[{{#each this.GroupSet}}{"Ref":"ec2sg{{this}}"}{{#unless @last}},{{/unless}}{{/each}}]
          }{{#unless @last}},{{/unless}}{{/each}}],
      {{/if}}
    {{/if}}

    {{#if this.PlacementGroupName}}"PlacementGroupName":"{{this.PlacementGroupName}}",{{/if}}
    {{#if this.PrivateIpAddress}}"PrivateIpAddress":"{{this.PrivateIpAddress}}",{{/if}}
    {{#if this.RamdiskId}}"RamdiskId":"{{this.RamdiskId}}",{{/if}}
    {{#if this.SecurityGroups}}"SecurityGroupIds":[{{#each this.SecurityGroups}}{"Ref":"ec2sg{{this}}"}{{#unless @last}},{{/unless}}{{/each}}],{{/if}}
    {{#if this.SsmAssociations}}"SsmAssociations":[{{#each this.SsmAssociations}}{"Ref":"ssmd{{this}}"}{{#unless @last}},{{/unless}}{{/each}}]{{/if}}

    "SourceDestCheck":{{default (toString this.SourceDestCheck) true}},
    {{#if this.SubnetId}}
      {{#startsWith "subnet-" this.SubnetId}}
      "SubnetId": "{{this.SubnetId}}",
      {{else}}
      {{#if this.SubnetIndex}}
      "SubnetId": {{#with (lookupByNode @root.Region.SubnetIds this.SubnetId) }}
        "{{lookup this ../SubnetIndex}}"
      {{/with}},
      {{else}}
      "SubnetId": {{#with (lookupByNode @root.Region.SubnetIds this.SubnetId) }}"{{this.[0]}}"{{/with}},
      {{/if}}
      {{/startsWith}}
    {{/if}}

    {{#if this.Tenancy}}"Tenancy":"{{this.Tenancy}}",{{/if}}
    {{#if this.UserData}}"UserData": { {{{inject this.UserData}}} },
    {{else}}
      {{> (whichPartial "user_data_" this) }},
    {{/if}}
    {{!-- "Volumes":[ EC2 MountPoint, ... ], --}}
    {{#if this.AdditionalInfo}}"AdditionalInfo":"{{this.AdditionalInfo}}",{{/if}}

    "Tags":[
      {{#switch this.AMI}}
        {{#sdefault}}{ "Key":"Name", "Value":"unk-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" },{{/sdefault}}
        {{#case 'linux_amazon'}}{ "Key":"Name", "Value":"ala-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" }, {{/case}}
        {{#case 'linux_ubuntu'}}{ "Key":"Name", "Value":"alu-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" }, {{/case}}
        {{#case 'linux_trusty'}}{ "Key":"Name", "Value":"alt-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" }, {{/case}}
        {{#case 'linux_zenial'}}{ "Key":"Name", "Value":"alz-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" }, {{/case}}
        {{#case 'win2012_base'}}{ "Key":"Name", "Value":"awb-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" }, {{/case}}
        {{#case 'win2012_core'}}{ "Key":"Name", "Value":"awc-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" }, {{/case}}
        {{#case 'win2016_full'}}{ "Key":"Name", "Value":"awf-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" }, {{/case}}
        {{#case 'win2016_nano'}}{ "Key":"Name", "Value":"awn-{{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}}" }, {{/case}}
      {{/switch}}
      {{#if this.PatchGroup}}{ "Key": "Patch Group", "Value": "{{this.PatchGroup}}" },{{/if}}
      {{#if this.InstanceName}}{ "Key":"Name", "Value":"{{this.InstanceName}}"},{{/if}}
      {{#if @root.Role}} { "Key":"Role",  "Value":"{{@root.Role}}" },{{/if}}
      {{#if @root.Owner}}{ "Key":"Owner", "Value":"{{@root.Owner}}" },{{/if}}
      {{#each this.Tags}}{ {{{inject this}}} },{{/each}}
      { "Key":"Environment",  "Value":"{{@root.EnvName}}" },
      { "Key":"Version",      "Value":"{{@root.EnvVersion}}" },
      { "Key":"Project",      "Value":"{{@root.ProjectName}}" }
    ]
  }
}
{{#if this.AutoRecovery}}
,"cldwalrm{{this.Name}}": {
  "Type":"AWS::CloudWatch::Alarm",
  "Properties": {
    "AlarmName": "EC2 AutoRecover: {{this.Name}} ({{@root.ProjectName}}-{{@root.EnvVersion}}{{@root.EnvName}})",
    "AlarmDescription": "Automatically recover this EC2 instance if something goes wrong.",
    "AlarmActions": [
      {{#each this.AutoRecovery.AlarmActions}}"{{this}}",{{/each}}
      "arn:aws:automate:{{@root.Region.Id}}:ec2:recover"
    ],
    "TreatMissingData": "notBreaching",
    "ComparisonOperator": "GreaterThanThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "StatusCheckFailed_System",
    "Namespace": "AWS/EC2",
    "Period": 60,
    "Statistic": "Minimum",
    "Threshold": 0,
    "Dimensions": [
      { "Name": "InstanceId", "Value": {"Ref":"ec2{{this.Name}}"} }
    ]
  }
}
{{/if}}