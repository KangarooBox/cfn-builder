{{!--
  Creates a new Amazon ElasticLoadBalancer.

  http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
  http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html
 --}}
"elbv2{{sanitize this.Name ''}}": {
  "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
  {{#if this.DependsOn}}"DependsOn": "{{this.DependsOn}}",{{/if}}
  "Properties": {
    "Name": "{{this.Name}}",
    "Scheme": "{{this.Scheme}}",
    {{#if this.SubnetMappings}}
      "SubnetMappings": [
        {{#if this.SubnetMappings.PrivateIPv4Address}}
          { "PrivateIPv4Address": "{{this.SubnetMappings.PrivateIPv4Address}}",
        {{else}}
          {{#ifEq this.Type 'network'}}
            { "AllocationId": { "Fn::GetAtt": ["{{this.SubnetMappings.AllocationId}}", "AllocationId"] },
          {{else}}
            { "AllocationId": { "Fn::GetAtt": ["ec2eip{{sanitize this.SubnetMappings.AllocationId ''}}","AllocationId"]},
          {{/ifEq}}
        {{/if}}

        {{!-- Restrict to a specific subnet AZ (a,b,c,d,e,etc.) --}}
        {{#each (lookupByNode @root.Region.Subnets this.SubnetId)}}
          {{#each this}}
            {{#ifEq this.AZ ../../SubnetIndex}}"SubnetId":"{{this.Id}}"{{/ifEq}}
          {{/each}}
        {{/each}}
      }
      ],
    {{else}}
      "Subnets":[
        {{#if this.SubnetIndex}}
          {{!-- Restrict to a specific subnet AZ (a,b,c,d,e,etc.) --}}
          {{#each (lookupByNode @root.Region.Subnets this.SubnetId)}}
            {{#each this}}
              {{#ifEq this.AZ ../../SubnetIndex}}"{{this.Id}}"{{/ifEq}}
            {{/each}}
          {{/each}}
        {{else}}
          {{!-- Use a whole subnet group --}}
          {{#each @root.Region.Subnets as |subnet name|}}
            {{#each subnet.addresses}}
              {{#ifEq ../../SubnetId name}}
                "{{this.Id}}"{{#unless @last}},{{/unless}}
              {{/ifEq}}
            {{/each}}
          {{/each}}
        {{/if}}
      ],
    {{/if}}
    {{#if this.LoadBalancerAttributes}}
    "LoadBalancerAttributes": [
      {{#each this.LoadBalancerAttributes}}
      { "Key": "{{this.Key}}", "Value": "{{this.Value}}"}
      {{#unless @last}},{{/unless}}{{/each}}
    ],
    {{/if}}
    {{#if this.SecurityGroups}}
      "SecurityGroups":[{{#each this.SecurityGroups}}{"Ref":"ec2sg{{this}}"}{{#unless @last}},{{/unless}}{{/each}}],
    {{/if}}
    {{#if this.Type}}"Type": "{{this.Type}}",{{/if}}
    {{> tags}}
  }
},

{{#each this.Listeners}}
  {{> elasticloadbalancingv2_listener Name=../Name}}

  {{#each this.Rules}}
  ,"elbv2lisrul{{sanitize ../../Name ''}}{{../this.Port}}{{@index}}": {
    "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    "Properties": {
      "Actions": [
        {{#each this.Actions}}
          { "Type":"{{lowercase this.Type}}",
          {{#switch (lowercase this.Type)}}
            {{#case "authenticate-cognito"}}{{/case}}
            {{#case "authenticate-oidc"}}{{/case}}
            {{#case "fixed-response"}}
              "FixedResponseConfig": { "StatusCode": "{{this.StatusCode}}" }}
            {{/case}}
            {{#case "redirect"}}
              "RedirectConfig": { {{{inject this.RedirectConfig}}} }}
            {{/case}}
            {{#case "forward"}}
              "TargetGroupArn": {"Ref":"elbv2tg{{sanitize this.TargetGroupArn ''}}"} }
            {{/case}}
          {{/switch}}
        {{comma}}{{/each}}
      ],
      "Conditions": [
        {{#each this.Conditions}}
          { "Field": "{{ lowercase this.Field }}",
          {{#switch (lowercase this.Field)}}
            {{#case "http-header"}}{{/case}}
            {{#case "http-request-method"}}{{/case}}
            {{#case "host-header"}}
              "HostHeaderConfig": { "Values": [{{#each this.HostHeaderConfig.Values}}"{{this}}"{{comma}}{{/each}}] }}
            {{/case}}
            {{#case "path-pattern"}}
              "PathPatternConfig": { "Values": [{{#each this.PathPatternConfig.Values}}"{{this}}"{{comma}}{{/each}}] }}
              {{/case}}
            {{#case "query-string"}}{{/case}}
            {{#case "source-ip"}}
              "SourceIpConfig": { "Values": [{{#each this.SourceIpConfig.Values}}"{{this}}"{{comma}}{{/each}}] }}
              {{/case}}
          {{/switch}}
        {{comma}}{{/each}}
      ],
      "ListenerArn": {"Ref": "elbv2lis{{sanitize ../../Name ''}}{{../this.Port}}" },
      "Priority": "{{this.Priority}}"
    }
  }{{/each}}
{{comma}}{{/each}}
