{{!--
  Creates a new Amazon ElasticLoadBalancer.

  http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
  http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listener.html
  http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html
 --}}
"elbv2{{sanitize this.Name ''}}": {
  "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
  {{#if this.DependsOn}}"DependsOn": "{{this.DependsOn}}",{{/if}}
  "Properties": {
    "Name": "{{this.Name}}",
    "Scheme": "{{this.Scheme}}",
    {{#if this.SubnetMappings}}
      "SubnetMappings": [
        {{#ifEq this.Type 'network'}}
          {{!-- { "AllocationId": "{{this.SubnetMappings.AllocationId}}", --}}
        {{else}}
          { "AllocationId": { "Fn::GetAtt": ["ec2eip{{sanitize this.SubnetMappings.AllocationId ''}}","AllocationId"]},
        {{/ifEq}}
        {{!-- Restrict to a specific subnet AZ (a,b,c,d,e,etc.) --}}
        {{#each (lookupByNode @root.Region.Subnets this.SubnetId)}}
          {{#each this}}
            {{#ifEq this.AZ ../../SubnetIndex}}"SubnetId":"{{this.Id}}"{{/ifEq}}
          {{/each}}
        {{/each}}
      }
      ],
    {{else}}
      "Subnets":[
        {{#if this.SubnetIndex}}
          {{!-- Restrict to a specific subnet AZ (a,b,c,d,e,etc.) --}}
          {{#each (lookupByNode @root.Region.Subnets this.SubnetId)}}
            {{#each this}}
              {{#ifEq this.AZ ../../SubnetIndex}}"{{this.Id}}"{{/ifEq}}
            {{/each}}
          {{/each}}
        {{else}}
          {{!-- Use a whole subnet group --}}
          {{#each @root.Region.Subnets as |subnet name|}}
            {{#each subnet.addresses}}
              {{#ifEq ../../SubnetId name}}
                "{{this.Id}}"{{#unless @last}},{{/unless}}
              {{/ifEq}}
            {{/each}}
          {{/each}}
        {{/if}}
      ],
    {{/if}}
    {{#if this.LoadBalancerAttributes}}
    "LoadBalancerAttributes": [
      {{#each this.LoadBalancerAttributes}}
      { "Key": "{{this.Key}}", "Value": "{{this.Value}}"}
      {{#unless @last}},{{/unless}}{{/each}}
    ],
    {{/if}}
    {{#if this.SecurityGroups}}
      "SecurityGroups":[{{#each this.SecurityGroups}}{"Ref":"ec2sg{{this}}"}{{#unless @last}},{{/unless}}{{/each}}],
    {{/if}}
    {{#if this.Type}}"Type": "{{this.Type}}",{{/if}}
    {{> tags}}
  }
},

{{#each this.Listeners}}
"elbv2lis{{sanitize ../Name ''}}{{this.Port}}": {
  "Type": "AWS::ElasticLoadBalancingV2::Listener",
  "Properties": {
    {{#if this.Certificates}}"Certificates": [
      {{#each this.Certificates}}
        {{#startsWith "arn:aws:acm:" this}}
          { "CertificateArn":"{{this}}" }
        {{else}}
          { "CertificateArn": { "Ref":"acmc{{sanitize this ''}}" }}
        {{/startsWith}}
      {{#unless @last}},{{/unless}}{{/each}}],
    {{/if}}
    {{#if this.SslPolicy}}"SslPolicy": "{{this.SslPolicy}}",{{/if}}
    "DefaultActions": [
      {{#each this.DefaultActions}}
      {{#if this.RedirectConfig}}
        { "Type":"{{this.Type}}", "RedirectConfig":{ {{{inject this.RedirectConfig}}} }}
      {{else}}
        { "TargetGroupArn": {"Ref":"elbv2tg{{sanitize this.TargetGroupArn ''}}"}, "Type":"{{this.Type}}"}
      {{/if}}
      {{#unless @last}},{{/unless}}{{/each}}
    ],
    "LoadBalancerArn": { "Ref": "elbv2{{sanitize ../Name ''}}" },
    "Port": "{{this.Port}}",
    "Protocol": "{{uppercase this.Protocol}}"
  }
}

  {{#each this.Rules}}
  ,"elbv2lisrul{{sanitize ../../Name ''}}{{../this.Port}}{{@index}}": {
    "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    "Properties": {
      "Actions": [ {{#each this.Actions}}{ "TargetGroupArn": {"Ref":"elbv2tg{{sanitize this.TargetGroupArn ''}}"}, "Type":"{{this.Type}}"}{{#unless @last}},{{/unless}}{{/each}}],
      "Conditions": [
      {{#each this.Conditions}}{ "Field": "{{this.Field}}", "Values":[
        {{#each this.Values}}"{{this}}"{{#unless @last}},{{/unless}}{{/each}}
        ]}{{#unless @last}},{{/unless}}{{/each}}
      ],
      "ListenerArn": {"Ref": "elbv2lis{{sanitize ../../Name ''}}{{../this.Port}}" },
      "Priority": {{this.Priority}}
    }
  }{{/each}}
{{#unless @last}},{{/unless}}{{/each}}
